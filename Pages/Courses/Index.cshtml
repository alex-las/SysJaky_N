@page
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model SysJaky_N.Pages.Courses.IndexModel
@{
    ViewData["Title"] = Localizer["Title"];
}

<nav aria-label="breadcrumb" class="mb-3">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-page="/Index">@Localizer["BreadcrumbHome"]</a></li>
        <li class="breadcrumb-item active" aria-current="page">@Localizer["BreadcrumbCourses"]</li>
    </ol>
</nav>

<h1 class="mb-3">@Localizer["Title"]</h1>

<ul class="nav nav-pills mb-3">
    <li class="nav-item"><a class="nav-link active" asp-page="/Courses/Index">@Localizer["TabList"]</a></li>
    <li class="nav-item"><a class="nav-link" asp-page="/Courses/Calendar">@Localizer["TabCalendar"]</a></li>
</ul>

@if (TempData["CartError"] is string cartError && !string.IsNullOrWhiteSpace(cartError))
{
    <div class="alert alert-danger" role="alert">@cartError</div>
}

<div class="space-y-6" x-data="{
        format: 'all',
        level: 'all',
        search: '',
        courses: @Html.Raw(Json.Serialize(Model.Courses)),
        formatAllLabel: @Html.Raw(Json.Serialize(Localizer["FiltersFormatAll"].Value ?? Localizer["FiltersButton"].Value ?? "Všechny formáty")),
        levelAllLabel: @Html.Raw(Json.Serialize(Localizer["FiltersLevelAll"].Value ?? Localizer["LevelsLabel"].Value ?? "Všechny úrovně")),
        resultCountTemplate: @Html.Raw(Json.Serialize(Localizer["ResultCount", "{0}"].Value ?? "{0}")),
        detailsLabel: @Html.Raw(Json.Serialize(Localizer["Details"].Value ?? "Detail")),
        noResultsLabel: @Html.Raw(Json.Serialize(Localizer["NoCoursesFound"].Value ?? "Žádné kurzy neodpovídají výběru.")),
        get formats() {
            const values = new Set(this.courses.map(course => course.mode ?? course.Mode).filter(value => value));
            return ['all', ...Array.from(values)];
        },
        get levels() {
            const values = new Set(this.courses.map(course => course.level ?? course.Level).filter(value => value));
            return ['all', ...Array.from(values)];
        },
        get filteredCourses() {
            const term = this.search.trim().toLowerCase();
            return this.courses.filter(course => {
                const mode = course.mode ?? course.Mode ?? '';
                const level = course.level ?? course.Level ?? '';
                const title = course.title ?? course.Title ?? '';
                const description = course.description ?? course.Description ?? '';
                const matchesFormat = this.format === 'all' || mode === this.format;
                const matchesLevel = this.level === 'all' || level === this.level;
                const matchesTerm = term === '' || title.toLowerCase().includes(term) || description.toLowerCase().includes(term);
                return matchesFormat && matchesLevel && matchesTerm;
            });
        },
        formatLabel(option) {
            return option === 'all' ? this.formatAllLabel : option;
        },
        levelLabel(option) {
            return option === 'all' ? this.levelAllLabel : option;
        },
        formatResultCount(count) {
            return this.resultCountTemplate.replace('{0}', count);
        },
        resetFilters() {
            this.format = 'all';
            this.level = 'all';
            this.search = '';
        }
    }">
    <div class="rounded-2xl border border-slate-200 bg-white p-6 shadow-sm">
        <div class="flex flex-col gap-6 lg:flex-row lg:items-end lg:justify-between">
            <label class="flex w-full flex-col gap-2 lg:max-w-md">
                <span class="text-sm font-medium text-slate-700">@Localizer["SearchLabel"]</span>
                <div class="relative">
                    <span class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3 text-slate-400">
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M9 3.5a5.5 5.5 0 1 0 0 11 5.5 5.5 0 0 0 0-11ZM2 9a7 7 0 1 1 12.452 4.391l3.328 3.329a.75.75 0 0 1-1.06 1.06l-3.329-3.328A7 7 0 0 1 2 9Z" clip-rule="evenodd" />
                        </svg>
                    </span>
                    <input type="search"
                           x-model="search"
                           placeholder="@Localizer["SearchPlaceholder"]"
                           class="block w-full rounded-xl border border-slate-300 bg-white py-2 pl-10 pr-4 text-sm text-slate-900 outline-none transition focus:border-blue-500 focus:ring-2 focus:ring-blue-200"
                           aria-label="@Localizer["SearchLabel"]" />
                </div>
            </label>
            <div class="flex flex-wrap gap-2">
                <template x-for="option in formats" :key="option">
                    <button type="button"
                            class="inline-flex items-center gap-2 rounded-full border px-4 py-2 text-sm font-medium transition"
                            @@click="format = option"
                            :class="format === option ? 'border-transparent bg-blue-600 text-white shadow-sm' : 'border-slate-300 bg-white text-slate-600 hover:border-blue-400 hover:text-blue-600'">
                        <span x-text="formatLabel(option)"></span>
                    </button>
                </template>
            </div>
        </div>
        <div class="mt-6 flex flex-col gap-3">
            <span class="text-sm font-medium text-slate-700">@Localizer["LevelsLabel"]</span>
            <div class="flex flex-wrap gap-2">
                <template x-for="option in levels" :key="option">
                    <button type="button"
                            class="inline-flex items-center gap-2 rounded-full border px-4 py-2 text-sm font-medium transition"
                            @@click="level = option"
                            :class="level === option ? 'border-transparent bg-slate-900 text-white shadow-sm' : 'border-slate-300 bg-white text-slate-600 hover:border-slate-400 hover:text-slate-900'">
                        <span x-text="levelLabel(option)"></span>
                    </button>
                </template>
            </div>
        </div>
        <div class="mt-6 flex flex-col gap-2 sm:flex-row sm:items-center sm:justify-between">
            <p class="text-sm text-slate-600">
                <span x-text="formatResultCount(filteredCourses.length)"></span>
            </p>
            <div class="flex gap-2">
                <button type="button"
                        class="inline-flex items-center rounded-lg border border-slate-300 px-4 py-2 text-sm font-medium text-slate-600 transition hover:border-slate-400 hover:text-slate-900"
                        @@click="resetFilters()">
                    @Localizer["ResetFilters"]
                </button>
            </div>
        </div>
    </div>

    <div class="grid gap-6 lg:grid-cols-2 xl:grid-cols-3" role="list">
        <template x-for="course in filteredCourses" :key="course.id ?? course.Id">
            <article class="flex h-full flex-col justify-between rounded-2xl border border-slate-200 bg-white p-6 shadow-sm transition hover:-translate-y-0.5 hover:shadow-md" role="listitem">
                <div class="flex flex-col gap-4">
                    <div class="flex items-start justify-between gap-3">
                        <h2 class="text-lg font-semibold text-slate-900" x-text="course.title ?? course.Title"></h2>
                        <span class="inline-flex items-center rounded-full bg-blue-100 px-3 py-1 text-xs font-semibold text-blue-700" x-text="course.mode ?? course.Mode"></span>
                    </div>
                    <p class="text-sm text-slate-600" x-show="course.description ?? course.Description" x-text="course.description ?? course.Description"></p>
                    <div class="flex flex-wrap items-center gap-2">
                        <span class="inline-flex items-center rounded-full bg-slate-100 px-3 py-1 text-xs font-semibold text-slate-700" x-text="course.level ?? course.Level"></span>
                        <span class="text-sm font-medium text-slate-700" x-text="course.dateDisplay ?? course.DateDisplay"></span>
                        <span class="text-sm font-semibold text-blue-600" x-text="course.priceDisplay ?? course.PriceDisplay"></span>
                    </div>
                </div>
                <div class="mt-6 flex items-center justify-between">
                    <span class="text-sm text-slate-500" x-text="course.durationDisplay ?? course.DurationDisplay"></span>
                    <a class="inline-flex items-center rounded-lg bg-blue-600 px-4 py-2 text-sm font-semibold text-white shadow-sm transition hover:bg-blue-500"
                       :href="course.detailsUrl ?? course.DetailsUrl"
                       x-text="detailsLabel"></a>
                </div>
            </article>
        </template>
    </div>

    <div class="rounded-2xl border border-dashed border-slate-300 p-8 text-center text-sm text-slate-500" x-show="filteredCourses.length === 0" x-text="noResultsLabel"></div>
</div>
