@using System.Globalization
@model SysJaky_N.Models.CourseCardViewModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@{
    var culture = CultureInfo.CurrentCulture;
    var headingId = $"course-card-title-{Model.Id}";
    var countdownText = Model.DaysUntilStart switch
    {
        > 0 => string.Format(Localizer["StartsInDays", Model.DaysUntilStart.Value].Value ?? "Začíná za {0} dní", Model.DaysUntilStart.Value),
        0 => Localizer["StartsToday"].Value ?? "Začíná dnes",
        < 0 => Localizer["AlreadyStarted"].Value ?? "Kurz probíhá",
        null => null
    };
    var occupancy = Math.Round(Model.OccupancyPercent);
    var occupancyDisplay = string.Format(Localizer["OccupancyLabel"].Value ?? "Obsazenost", occupancy);
    var occupancyAria = string.Format(Localizer["OccupancyAria", occupancy.ToString("0", culture)].Value ?? "Obsazenost {0}%", occupancy.ToString("0", culture));
    var previewText = string.IsNullOrWhiteSpace(Model.PreviewContent)
        ? Localizer["PreviewFallback"].Value ?? Localizer["PreviewLabel"].Value ?? "Rychlý náhled"
        : Model.PreviewContent;
    string GetIsoColor(string code) => code switch
    {
        "9001" => "#0d6efd",
        "14001" => "#198754",
        "45001" => "#dc3545",
        "27001" => "#6f42c1",
        _ => "#0aa2c0"
    };
    string GetIsoIconPath(string code) => code switch
    {
        "9001" => "M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2Zm0 2a8 8 0 1 1 0 16 8 8 0 0 1 0-16Zm-.5 3.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3Zm3.5 2.5a2 2 0 0 0-2 2v3.5h1.75a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 1 1 0-1.5H10v-4a3.5 3.5 0 0 1 7 0v.25a.75.75 0 0 1-1.5 0V10a2 2 0 0 0-2-2Z",
        "14001" => "M12 3c.414 0 .75.336.75.75V6h2.25a.75.75 0 0 1 0 1.5H12a.75.75 0 0 1-.75-.75V3.75c0-.414.336-.75.75-.75Zm-4.5 4A1.5 1.5 0 0 1 9 8.5V18h8.25a.75.75 0 0 1 0 1.5H8.25A.75.75 0 0 1 7.5 18V8.5A1.5 1.5 0 0 1 9 7h1.5ZM6 10.5a.75.75 0 0 1 .75.75V18a3 3 0 0 0 3 3h7.5a.75.75 0 0 1 0 1.5h-7.5A4.5 4.5 0 0 1 5.25 18v-6.75A.75.75 0 0 1 6 10.5Z",
        "45001" => "M12 2a10 10 0 1 1 0 20 10 10 0 0 1 0-20Zm0 1.5a8.5 8.5 0 1 0 0 17 8.5 8.5 0 0 0 0-17ZM9.5 8a2.5 2.5 0 1 1 0 5h-.75v3.75a.75.75 0 1 1-1.5 0V8.75A.75.75 0 0 1 8 8h1.5Zm5 0A2.5 2.5 0 0 1 17 10.5v.25a.75.75 0 0 1-1.5 0v-.25a1 1 0 0 0-2 0v5.5a.75.75 0 0 1-1.5 0v-5.5A2.5 2.5 0 0 1 14.5 8Z",
        "27001" => "M11.25 4a3.75 3.75 0 0 1 7.5 0v4.25h.75a1.5 1.5 0 0 1 1.5 1.5v9A1.5 1.5 0 0 1 19.5 20h-15A1.5 1.5 0 0 1 3 18.75v-9A1.5 1.5 0 0 1 4.5 8.25H5.25V4a3.75 3.75 0 0 1 7.5 0v4.25h-1.5V4a2.25 2.25 0 0 0-4.5 0v4.25h9V4a2.25 2.25 0 0 0-4.5 0v4.25h-1.5ZM12 13.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5Zm0 1.5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z",
        _ => "M12 2a10 10 0 1 1-7.07 2.93A10 10 0 0 1 12 2Zm0 1.5a8.5 8.5 0 1 0 6.01 14.51A8.5 8.5 0 0 0 12 3.5Zm0 4a1.5 1.5 0 1 1 0 3h-.25a.75.75 0 0 0-.75.75V15a.75.75 0 0 0 1.5 0v-2.25H13a2.25 2.25 0 1 0-1-4.25Z"
    };
}

<article class="course-card card-hover feature-card h-100 d-flex flex-column" role="article" aria-labelledby="@headingId">
  <div class="course-card__media position-relative">
    @if (!string.IsNullOrWhiteSpace(Model.CoverImageUrl))
    {
        var separator = Model.CoverImageUrl.Contains('?') ? "&" : "?";
        var baseUrl = Model.CoverImageUrl + separator;
        <picture class="course-card__picture">
          <source type="image/webp" srcset="@($"{baseUrl}w=480&format=webp 480w, {baseUrl}w=768&format=webp 768w, {baseUrl}w=1200&format=webp 1200w")" sizes="(max-width: 768px) 100vw, 480px" />
          <img class="course-card__image" src="@($"{baseUrl}w=768&format=jpg")" srcset="@($"{baseUrl}w=480&format=jpg 480w, {baseUrl}w=768&format=jpg 768w, {baseUrl}w=1200&format=jpg 1200w")" sizes="(max-width: 768px) 100vw, 480px" alt="@Localizer["CourseImageAlt", Model.Title]" loading="lazy" decoding="async" onload="this.dataset.loaded='true';" />
        </picture>
    }
    else
    {
        <div class="course-card__image course-card__image--placeholder" aria-hidden="true"></div>
    }

    @if (Model.IsoBadges.Any())
    {
        <ul class="course-card__iso-list" aria-label="@Localizer["IsoBadgeListAria"].Value">
        @foreach (var badge in Model.IsoBadges)
        {
            var color = GetIsoColor(badge.Code);
            <li class="course-card__iso-badge" aria-label="@string.Format(Localizer["IsoBadgeAria", badge.Label].Value ?? "Certifikace {0}", badge.Label)">
              <span class="course-card__iso-icon" style="--iso-color:@color">
                <svg viewBox="0 0 24 24" role="presentation" aria-hidden="true"><path d="@GetIsoIconPath(badge.Code)"></path></svg>
              </span>
              <span class="course-card__iso-label">@badge.Label</span>
            </li>
        }
        </ul>
    }

    <button type="button"
            class="course-card__wishlist"
            data-wishlist-button
            data-course-id="@Model.Id"
            data-wishlist-label-add="@Localizer["WishlistAdd"].Value"
            data-wishlist-label-remove="@Localizer["WishlistRemove"].Value"
            aria-pressed="false"
            aria-label="@Localizer["WishlistAdd"].Value">
      <svg viewBox="0 0 24 24" role="presentation" aria-hidden="true">
        <path d="M12 21s-6.716-4.418-9.193-7.368C.386 10.74.7 6.54 3.64 4.7 5.49 3.55 7.86 3.87 9.34 5.35L12 8.01l2.66-2.66c1.48-1.48 3.85-1.8 5.7-.65 2.94 1.84 3.25 6.04.83 8.93C18.72 16.58 12 21 12 21Z" />
      </svg>
      <span class="visually-hidden">@Localizer["WishlistAdd"]</span>
    </button>
  </div>

  <div class="course-card__body d-flex flex-column flex-grow-1 gap-3 p-3">
    <header>
      <h3 id="@headingId" class="h5 mb-1 course-card__title">@Model.Title</h3>
      @if (!string.IsNullOrWhiteSpace(Model.Description))
      {
        <p class="course-card__excerpt text-muted mb-0">@Model.Description</p>
      }
    </header>

    <div class="course-card__meta d-flex flex-wrap gap-2" aria-label="@Localizer["MetaInformation"].Value">
      <span class="course-card__meta-item" aria-label="@string.Format(Localizer["ModeAria", Model.Mode].Value ?? "Režim: {0}", Model.Mode)">
        <i class="bi bi-broadcast" aria-hidden="true"></i>
        <span>@Model.Mode</span>
      </span>
      <span class="course-card__meta-item" aria-label="@string.Format(Localizer["LevelAria", Model.Level].Value ?? "Úroveň: {0}", Model.Level)">
        <i class="bi bi-bar-chart" aria-hidden="true"></i>
        <span>@Model.Level</span>
      </span>
      <span class="course-card__meta-item" aria-label="@string.Format(Localizer["TypeAria", Model.Type].Value ?? "Typ: {0}", Model.Type)">
        <i class="bi bi-geo-alt" aria-hidden="true"></i>
        <span>@Model.Type</span>
      </span>
      <span class="course-card__meta-item" aria-label="@Localizer["CertificateAria"].Value">
        <i class="bi bi-patch-check" aria-hidden="true"></i>
        <span>@(Model.HasCertificate ? Localizer["CertificateAvailable"].Value ?? "Certifikát" : Localizer["CertificateUnavailable"].Value ?? "Bez certifikátu")</span>
      </span>
      <button type="button" class="course-card__preview" data-course-preview="@previewText" aria-label="@Localizer["PreviewLabel"].Value">
        <i class="bi bi-eye" aria-hidden="true"></i>
      </button>
    </div>

    <div class="course-card__progress" aria-label="@occupancyAria">
      <div class="progress" role="progressbar" aria-valuenow="@occupancy" aria-valuemin="0" aria-valuemax="100">
        <div class="progress-bar" style="width:@occupancy%"></div>
      </div>
      <div class="course-card__progress-text">@occupancyDisplay: @occupancy.ToString("0", culture)%</div>
    </div>

    <div class="course-card__schedule d-flex flex-wrap justify-content-between gap-2 align-items-center">
      <div class="d-flex flex-column">
        <span class="course-card__date" aria-label="@Localizer["CourseDateAria", Model.DateDisplay].Value">@Model.DateDisplay</span>
        @if (!string.IsNullOrWhiteSpace(countdownText))
        {
            <span class="course-card__countdown">@countdownText</span>
        }
      </div>
      <div class="course-card__price fw-semibold text-end">@Model.PriceDisplay</div>
    </div>

    @if (!string.IsNullOrWhiteSpace(Model.PopoverHtml))
    {
      <div>
        <a tabindex="0" role="button" class="course-card__info" data-bs-toggle="popover" data-bs-html="true" data-bs-content="@Model.PopoverHtml" aria-label="@Localizer["CourseAdditionalInfoAria", Model.Title]">
          <i class="bi bi-info-circle" aria-hidden="true"></i> @Localizer["AdditionalInfo"]
        </a>
      </div>
    }

    <div class="course-card__footer mt-auto d-flex flex-wrap align-items-center justify-content-between gap-3">
      <div class="form-check form-check-inline m-0">
        <input class="form-check-input cmp-check" type="checkbox" value="@Model.Id" id="cmp_@Model.Id">
        <label class="form-check-label small" for="cmp_@Model.Id">@Localizer["Compare"]</label>
      </div>
      <div class="course-card__actions d-flex flex-wrap gap-2">
        <a class="btn btn-outline-secondary btn-sm" href="@Model.DetailsUrl">@Localizer["Details"]</a>
        <form method="post" action="@Model.AddToCartUrl" class="d-inline">
          <input type="hidden" name="courseId" value="@Model.Id" />
          <button type="submit" class="btn btn-primary btn-sm" aria-label="@Localizer["EnrollAriaLabel", Model.Title]">@Localizer["Enroll"]</button>
        </form>
      </div>
    </div>
  </div>
</article>
