@page "{id:int}"
@model SysJaky_N.Pages.Courses.DetailsModel
@using System.Collections.Generic
@using SysJaky_N.Models
@{
    var metaTitle = string.IsNullOrWhiteSpace(Model.Course.MetaTitle)
        ? Model.Course.Title
        : Model.Course.MetaTitle.Trim();
    var metaDescriptionRaw = !string.IsNullOrWhiteSpace(Model.Course.MetaDescription)
        ? Model.Course.MetaDescription
        : Model.Course.Description;
    var metaDescription = metaDescriptionRaw?.ReplaceLineEndings(" ").Trim();
    var hasMetaDescription = !string.IsNullOrWhiteSpace(metaDescription);
    var ogImage = Model.Course.OpenGraphImage;
    var resolvedTitle = string.IsNullOrWhiteSpace(metaTitle) ? Model.Course.Title : metaTitle;
    ViewData["Title"] = resolvedTitle;
}

@section Head {
    <meta property="og:title" content="@resolvedTitle" />
    <meta property="og:type" content="website" />
    @if (hasMetaDescription)
    {
        <meta name="description" content="@metaDescription" />
        <meta property="og:description" content="@metaDescription" />
    }
    @if (!string.IsNullOrWhiteSpace(ogImage))
    {
        <meta property="og:image" content="@ogImage" />
    }
    @{
        var jsonLdDescription = (Model.Course.Description ?? string.Empty)
            .ReplaceLineEndings(" ")
            .Replace("\"", "'");

        var jsonLdData = new System.Text.Json.Nodes.JsonObject
        {
            ["@context"] = "https://schema.org",
            ["@type"] = "Course",
            ["name"] = Model.Course.Title,
            ["description"] = jsonLdDescription,
            ["provider"] = new System.Text.Json.Nodes.JsonObject
            {
                ["@type"] = "Organization",
                ["name"] = "Systémy jakosti",
                ["sameAs"] = "https://www.systemy-jakosti.cz/"
            },
            ["hasCourseInstance"] = new System.Text.Json.Nodes.JsonObject
            {
                ["@type"] = "CourseInstance",
                ["startDate"] = Model.Course.Date.ToString("yyyy-MM-dd"),
                ["courseMode"] = Model.Course.Mode.ToString(),
                ["offers"] = new System.Text.Json.Nodes.JsonObject
                {
                    ["@type"] = "Offer",
                    ["price"] = System.Text.Json.Nodes.JsonValue.Create(Model.Course.Price),
                    ["priceCurrency"] = "CZK",
                    ["availability"] = "https://schema.org/InStock"
                }
            }
        };

        var jsonLd = jsonLdData.ToJsonString(new System.Text.Json.JsonSerializerOptions
        {
            Encoder = System.Text.Encodings.Web.JavaScriptEncoder.UnsafeRelaxedJsonEscaping
        });
    }
    <script type="application/ld+json">
        @Html.Raw(jsonLd)
    </script>
}

<h1 class="mb-3">@Model.Course.Title</h1>

@if (!string.IsNullOrEmpty(Model.Course.CoverImageUrl))
{
    <figure class="mb-4">
        <img src="@Model.Course.CoverImageUrl" alt="Obrázek kurzu @Model.Course.Title" class="img-fluid rounded" loading="lazy" decoding="async" />
    </figure>
}

@if (TempData["CartError"] is string cartError && !string.IsNullOrWhiteSpace(cartError))
{
    <div class="alert alert-danger" role="alert">@cartError</div>
}

<div class="row g-4">
    <div class="col-lg-8">
        @{
            var outcomeTopics = Model.Course.CourseTags?
                .Select(ct => ct.Tag?.Name)
                .Where(name => !string.IsNullOrWhiteSpace(name))
                .Distinct(System.StringComparer.OrdinalIgnoreCase)
                .ToList() ?? new List<string>();

            if (outcomeTopics.Count == 0)
            {
                outcomeTopics = new List<string>
                {
                    "Praktické postupy pro každodenní práci",
                    "Aktuální normy a legislativní změny",
                    "Ověřené tipy a doporučení z praxe"
                };
            }

            string levelSummary = Model.Course.Level switch
            {
                CourseLevel.Beginner => "Začínající profesionály, kteří se chtějí rychle zorientovat.",
                CourseLevel.Intermediate => "Specialisty se základní zkušeností, kteří potřebují posunout své dovednosti dál.",
                CourseLevel.Advanced => "Zkušené odborníky hledající detailní vhled do pokročilých témat.",
                _ => "Odborníky se zájmem o prohloubení znalostí."
            };

            string levelLimitation = Model.Course.Level switch
            {
                CourseLevel.Beginner => "Účastníky očekávající velmi pokročilé nebo strategické know-how.",
                CourseLevel.Intermediate => "Úplné začátečníky bez předchozích zkušeností v dané oblasti.",
                CourseLevel.Advanced => "Účastníky hledající jen úvodní seznámení s problematikou.",
                _ => "Účastníky mimo zaměření kurzu."
            };

            string modePreference = Model.Course.Mode switch
            {
                CourseMode.SelfPaced => "Lidi, kteří preferují studium vlastním tempem s možností vracet se k materiálům.",
                CourseMode.InstructorLed => "Účastníky, kteří chtějí interaktivní vedení lektorem a prostor pro dotazy.",
                CourseMode.Blended => "Týmy, které ocení kombinaci samostudia a živých setkání.",
                _ => "Zájemce o flexibilní vzdělávání."
            };

            string modeLimitation = Model.Course.Mode switch
            {
                CourseMode.SelfPaced => "Zájemce vyžadující intenzivní osobní vedení lektora v reálném čase.",
                CourseMode.InstructorLed => "Ty, kteří preferují zcela samostatné tempo bez pevně daných termínů.",
                CourseMode.Blended => "Účastníky, kteří nemohou kombinovat online studium se živými setkáními.",
                _ => "Účastníky s odlišnými preferencemi formy výuky."
            };

            var audienceFor = new List<string> { levelSummary, modePreference };
            if (Model.Course.CourseGroup is not null)
            {
                audienceFor.Add($"Členy vzdělávacího bloku „{Model.Course.CourseGroup.Title}“ hledající navazující obsah.");
            }

            var audienceNotFor = new List<string> { levelLimitation, modeLimitation };
            if (!Model.Course.IsActive)
            {
                audienceNotFor.Add("Zájemce o aktuálně otevřený termín – kurz je dočasně pozastaven.");
            }

            audienceFor = audienceFor
                .Where(item => !string.IsNullOrWhiteSpace(item))
                .Distinct(System.StringComparer.OrdinalIgnoreCase)
                .ToList();

            audienceNotFor = audienceNotFor
                .Where(item => !string.IsNullOrWhiteSpace(item))
                .Distinct(System.StringComparer.OrdinalIgnoreCase)
                .ToList();
        }

        @if (!string.IsNullOrWhiteSpace(Model.Course.Description))
        {
            <section class="mb-4">
                <h2 class="h5">O kurzu</h2>
                <p>@Model.Course.Description</p>
            </section>
        }

        @if (Model.Terms.Any())
        {
            <section class="mb-4">
                <h2 class="h5">Nejbližší termíny</h2>
                <div class="table-responsive">
                    <table class="table align-middle">
                        <thead><tr><th>Datum</th><th>Místo</th><th>Dostupnost</th><th class="text-end"></th></tr></thead>
                        <tbody>
                            @foreach (var term in Model.Terms)
                            {
                                var scarce = term.SeatsLeft <= 3 && term.SeatsLeft > 0;
                                var seatsLabel = term.SeatsLeft switch
                                {
                                    1 => "místo",
                                    2 or 3 or 4 => "místa",
                                    _ => "míst"
                                };
                                <tr>
                                    <td>@term.StartsAt.ToString("d")</td>
                                    <td>@(term.IsOnline ? "Online" : term.Location)</td>
                                    <td>
                                        @if (term.SeatsLeft == 0)
                                        {
                                            <span class="badge bg-secondary">Obsazeno</span>
                                        }
                                        else if (scarce)
                                        {
                                            <span class="badge bg-warning text-dark">Poslední @term.SeatsLeft @seatsLabel</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-success">Volno</span>
                                        }
                                    </td>
                                    <td class="text-end">
                                        <a class="btn btn-outline-secondary btn-sm" asp-page="/CourseTerms/Details" asp-route-id="@term.Id">Detail</a>
                                        <a class="btn btn-secondary btn-sm" href="/CourseTerms/ICS/@term.Id">.ics</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </section>
        }

        <section class="mb-4">
            <h2 class="h5 mb-3">Co se naučíte</h2>
            <ul class="list-unstyled mb-0">
                @foreach (var topic in outcomeTopics)
                {
                    <li class="d-flex align-items-start gap-2 mb-2">
                        <i class="bi bi-check2 text-success"></i>
                        <span>@topic</span>
                    </li>
                }
            </ul>
        </section>

        <section class="mb-4">
            <div class="row g-4">
                <div class="col-md-6">
                    <h3 class="h6 text-uppercase text-muted mb-2">Pro koho je</h3>
                    <ul class="small text-muted mb-0">
                        @foreach (var item in audienceFor)
                        {
                            <li class="mb-1">@item</li>
                        }
                    </ul>
                </div>
                <div class="col-md-6">
                    <h3 class="h6 text-uppercase text-muted mb-2">Pro koho není</h3>
                    <ul class="small text-muted mb-0">
                        @foreach (var item in audienceNotFor)
                        {
                            <li class="mb-1">@item</li>
                        }
                    </ul>
                </div>
            </div>
        </section>

        <section class="mb-4">
            <h2 class="h5">Detaily</h2>
            <ul class="list-unstyled small">
                <li><i class="bi bi-calendar2 me-2"></i>Termín: @Model.Course.Date.ToString("d")</li>
                <li><i class="bi bi-clock me-2"></i>Délka: @Model.Course.Duration min</li>
                <li><i class="bi bi-bar-chart me-2"></i>Úroveň: @Model.Course.Level</li>
                <li><i class="bi bi-laptop me-2"></i>Forma: @Model.Course.Mode</li>
            </ul>
        </section>

        @if (Model.CourseBlock != null)
        {
            <section class="mb-4">
                <h2 class="h5">Součást vzdělávacího bloku</h2>
                <p class="mb-2">@Model.CourseBlock.Description</p>
                <dl class="row small mb-3">
                    <dt class="col-sm-4">Název bloku</dt>
                    <dd class="col-sm-8">@Model.CourseBlock.Title</dd>
                    <dt class="col-sm-4">Cena bloku</dt>
                    <dd class="col-sm-8">@Model.CourseBlock.Price.ToString("C")</dd>
                </dl>
                <form method="post" asp-page-handler="OrderBlock" class="d-inline">
                    <input type="hidden" name="blockId" value="@Model.CourseBlock.Id" />
                    <button type="submit" class="btn btn-outline-primary btn-sm">Objednat celý blok</button>
                </form>
            </section>
        }

        <section class="mt-4">
            <h2 class="h5">Lekce</h2>
            @if (Model.Lessons.Any())
            {
                <div class="list-group">
                    @foreach (var lesson in Model.Lessons)
                    {
                        Model.ProgressByLessonId.TryGetValue(lesson.Id, out var progressInfo);
                        var completion = progressInfo?.Progress ?? 0;
                        <div class="list-group-item">
                            <div class="d-flex flex-column gap-2">
                                <div class="d-flex justify-content-between flex-wrap gap-3">
                                    <div>
                                        <div class="fw-semibold">Lekce pořadí: @lesson.Order</div>
                                        <div class="text-muted">Typ: @lesson.Type</div>
                                        @if (!string.IsNullOrWhiteSpace(lesson.ContentUrl))
                                        {
                                            <a class="link-primary" href="@lesson.ContentUrl" target="_blank" rel="noopener">Otevřít obsah</a>
                                        }
                                    </div>
                                    <div class="text-end">
                                        <div class="fw-semibold">@completion&nbsp;% dokončeno</div>
                                        @if (progressInfo is not null)
                                        {
                                            <div class="text-muted small">Naposledy @(progressInfo.LastSeenUtc.ToLocalTime().ToString("g"))</div>
                                        }
                                    </div>
                                </div>
                                @if (User.Identity?.IsAuthenticated ?? false)
                                {
                                    <form method="post" asp-page-handler="UpdateProgress" asp-route-id="@Model.Course.Id" class="d-flex flex-column flex-sm-row align-items-sm-center gap-2">
                                        <input type="hidden" name="lessonId" value="@lesson.Id" />
                                        <div class="input-group input-group-sm" style="max-width: 220px;">
                                            <span class="input-group-text">Progres</span>
                                            <input type="number" class="form-control" name="progress" min="0" max="100" value="@completion" aria-label="Procento dokončení lekce pořadí @lesson.Order" />
                                            <span class="input-group-text">%</span>
                                        </div>
                                        <div class="d-flex gap-2 flex-wrap">
                                            <button type="submit" class="btn btn-sm btn-primary">Uložit</button>
                                            <button type="submit" class="btn btn-sm btn-outline-success" onclick="this.form.querySelector('[name=progress]').value = 100;">Dokončeno</button>
                                        </div>
                                    </form>
                                }
                                else
                                {
                                    <p class="text-muted small mb-0">Přihlaste se pro sledování postupu.</p>
                                }
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="text-muted">Pro tento kurz zatím nejsou dostupné lekce.</p>
            }
        </section>
    </div>
    <div class="col-lg-4">
        <div class="p-3 border rounded-3 position-sticky top-0">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <strong>Cena</strong>
                <div class="fs-5 fw-bold">@Model.Course.Price.ToString("C")</div>
            </div>
            <ul class="list-unstyled small text-muted mb-3">
                <li><i class="bi bi-check-circle"></i> Certifikát v ceně (pokud je u termínu uvedeno)</li>
                <li><i class="bi bi-check-circle"></i> Materiály ke stažení</li>
                <li><i class="bi bi-check-circle"></i> Snadné storno do 5 pracovních dnů</li>
            </ul>
            <div class="d-grid gap-2">
                <form method="post">
                    <button type="submit" class="btn btn-primary">Přihlásit se</button>
                </form>
                <a class="btn btn-outline-secondary" asp-page="/Contact" asp-route-subject="Firemní poptávka: @Model.Course.Title">Pro tým</a>
            </div>
        </div>

        @if (User.Identity?.IsAuthenticated ?? false)
        {
            <form method="post" asp-page-handler="AddToWishlist" class="mt-3">
                <button type="submit" class="btn btn-outline-secondary w-100">Přidat do wishlistu</button>
            </form>
        }
    </div>
</div>

@if (Model.Reviews.Any())
{
    <section class="mt-5">
        <h2 class="h5">Hodnocení</h2>
        <ul class="list-unstyled">
            @foreach (var review in Model.Reviews)
            {
                <li class="mb-3">
                    <div class="fw-semibold">@review.Rating/5 &ndash; @review.User?.UserName</div>
                    <div class="text-muted small mb-1">@review.CreatedAt.ToShortDateString()</div>
                    <div>@review.Comment</div>
                </li>
            }
        </ul>
    </section>
}

@if (User.Identity?.IsAuthenticated ?? false)
{
    <section class="mt-4">
        <h3 class="h5">Přidat hodnocení</h3>
        <form method="post" asp-page-handler="Review">
            <div class="mb-3">
                <label asp-for="NewReview.Rating" class="form-label"></label>
                <input asp-for="NewReview.Rating" class="form-control" min="1" max="5" />
                <span asp-validation-for="NewReview.Rating" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="NewReview.Comment" class="form-label"></label>
                <textarea asp-for="NewReview.Comment" class="form-control"></textarea>
                <span asp-validation-for="NewReview.Comment" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-success">Odeslat hodnocení</button>
        </form>
    </section>
}
else
{
    <p class="mt-4"><a asp-page="/Account/Login">Přihlaste se</a> pro přidání hodnocení.</p>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

