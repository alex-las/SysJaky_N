@page
@model SysJaky_N.Pages.Articles.IndexModel
@using System.Globalization
@using System.Linq
@using System.Text.RegularExpressions
@functions {
    public record ArticleViewModel(
        int Id,
        string Title,
        string Excerpt,
        string SearchText,
        DateTime PublishedAt
    );

    private static string StripHtml(string? input)
    {
        if (string.IsNullOrWhiteSpace(input))
        {
            return string.Empty;
        }

        return Regex.Replace(input, "<.*?>", string.Empty);
    }

    private static string BuildExcerpt(string input, int maxLength = 180)
    {
        if (string.IsNullOrWhiteSpace(input))
        {
            return string.Empty;
        }

        var normalized = Regex.Replace(input, "\s+", " ").Trim();

        if (normalized.Length <= maxLength)
        {
            return normalized;
        }

        var truncated = normalized.Substring(0, maxLength).TrimEnd(',', ';', '.', ':', '-', ' ');
        return string.Concat(truncated, "…");
    }
}
@{
    ViewData["Title"] = "Články a inspirace";
    var culture = CultureInfo.CurrentUICulture;
    var articleCards = Model.Articles
        .Select(article =>
        {
            var plainContent = StripHtml(article.Content);
            var excerpt = BuildExcerpt(plainContent);
            var searchText = string.Concat(article.Title, " ", plainContent).ToLower(culture);
            return new ArticleViewModel(article.Id, article.Title, excerpt, searchText, article.CreatedAt);
        })
        .ToList();

    var years = articleCards
        .Select(a => a.PublishedAt.Year)
        .Distinct()
        .OrderByDescending(y => y)
        .ToList();
}

<section class="articles-hero">
    <div class="articles-hero__content">
        <p class="text-uppercase fw-semibold text-primary mb-2">Inspirační knihovna</p>
        <h1 class="display-5 fw-bold mb-3">Články, které zefektivní vaše systémy řízení</h1>
        <p class="lead text-muted mb-0">Vyberte si z kurátorovaného výběru článků o ISO normách, auditech i procesním řízení. Filtrujte podle kategorií, vyhledávejte klíčová témata a přepínejte mezi dlaždicovým a seznamovým zobrazením.</p>
    </div>
</section>

<section class="articles-toolbar" aria-label="Ovládací panel článků">
    <form method="get" class="toolbar-group toolbar-group--search" role="search">
        <label for="articleSearch" class="form-label fw-semibold">Hledat články</label>
        <div class="input-group">
            <input type="search" id="articleSearch" name="SearchString" value="@Model.SearchString" class="form-control" placeholder="Zadejte název nebo klíčové slovo" data-articles-search aria-describedby="articleSearchHelp" />
            <button type="submit" class="btn btn-primary">Hledat</button>
        </div>
        <input type="hidden" name="PageNumber" value="1" />
        <div id="articleSearchHelp" class="form-text">Vyhledáváme v názvu i obsahu článků.</div>
    </form>
    @if (years.Count > 0)
    {
        <div class="toolbar-group toolbar-group--filters" role="group" aria-labelledby="articleFiltersLabel">
            <div class="d-flex align-items-center gap-2 mb-2">
                <i class="bi bi-filter fs-5 text-primary" aria-hidden="true"></i>
                <span id="articleFiltersLabel" class="fw-semibold">Filtrovat podle roku vydání</span>
            </div>
            <div class="toolbar-filters" data-filter-checkboxes>
                @foreach (var year in years)
                {
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" value="@year" id="filter-@year" checked data-year-filter />
                        <label class="form-check-label" for="filter-@year">@year</label>
                    </div>
                }
            </div>
        </div>
    }
    <div class="toolbar-group toolbar-group--view" role="group" aria-label="Přepnout zobrazení">
        <button type="button" class="btn btn-outline-primary active" data-view-toggle="grid" aria-pressed="true">
            <i class="bi bi-grid" aria-hidden="true"></i>
            <span class="ms-2">Dlaždice</span>
        </button>
        <button type="button" class="btn btn-outline-primary" data-view-toggle="list" aria-pressed="false">
            <i class="bi bi-list" aria-hidden="true"></i>
            <span class="ms-2">Seznam</span>
        </button>
    </div>
</section>

<section class="articles-results" aria-live="polite">
    <div id="articlesLiveRegion" class="visually-hidden" aria-live="polite" aria-atomic="true"></div>
    @if (articleCards.Any())
    {
        <div class="article-list article-list--grid" data-articles-list data-view="grid">
            @foreach (var article in articleCards)
            {
                var publishedAt = article.PublishedAt.ToLocalTime();
                <article class="article-card" data-article-card data-year="@article.PublishedAt.Year" data-search-text="@article.SearchText">
                    <div class="article-card__body">
                        <div class="article-card__meta">
                            <span class="badge bg-light text-primary border border-primary-subtle">@publishedAt.ToString("yyyy", culture)</span>
                            <span class="text-muted">@publishedAt.ToString("d. MMMM yyyy", culture)</span>
                        </div>
                        <h2 class="article-card__title">@article.Title</h2>
                        <p class="article-card__perex">@article.Excerpt</p>
                    </div>
                    <footer class="article-card__footer">
                        <div class="d-flex flex-wrap align-items-center gap-3">
                            <a class="btn btn-primary" asp-page="./Details" asp-route-id="@article.Id">Číst článek</a>
                            <a class="link-primary d-flex align-items-center gap-1" asp-page="./Details" asp-route-id="@article.Id">
                                Detail článku
                                <i class="bi bi-arrow-right" aria-hidden="true"></i>
                            </a>
                        </div>
                    </footer>
                </article>
            }
        </div>
        <div class="articles-empty alert alert-info d-none" data-empty-state role="status">
            <i class="bi bi-info-circle" aria-hidden="true"></i>
            <span>Nenašli jsme žádné články pro zadanou kombinaci vyhledávání a filtrů. Upravte prosím podmínky a zkuste to znovu.</span>
        </div>
    }
    else
    {
        <div class="alert alert-info" role="status">
            <i class="bi bi-info-circle" aria-hidden="true"></i>
            <span>Momentálně nemáme žádné články k zobrazení.</span>
        </div>
    }
</section>

@if (Model.TotalPages > 1)
{
    var startPage = Math.Max(1, Model.PageNumber - 2);
    var endPage = Math.Min(Model.TotalPages, startPage + 4);
    startPage = Math.Max(1, endPage - 4);

    <nav class="mt-4" aria-label="Stránkování článků">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.PageNumber <= 1 ? "disabled" : string.Empty)">
                <a class="page-link" asp-page="./Index" asp-route-PageNumber="@(Model.PageNumber - 1)" asp-route-SearchString="@Model.SearchString" aria-label="Předchozí stránka">Předchozí</a>
            </li>
            @for (var page = startPage; page <= endPage; page++)
            {
                var isActive = page == Model.PageNumber;
                <li class="page-item @(isActive ? "active" : string.Empty)">
                    <a class="page-link" asp-page="./Index" asp-route-PageNumber="@page" asp-route-SearchString="@Model.SearchString">@page</a>
                </li>
            }
            <li class="page-item @(Model.PageNumber >= Model.TotalPages ? "disabled" : string.Empty)">
                <a class="page-link" asp-page="./Index" asp-route-PageNumber="@(Model.PageNumber + 1)" asp-route-SearchString="@Model.SearchString" aria-label="Další stránka">Další</a>
            </li>
        </ul>
        <p class="text-center text-muted small mb-0">Stránka @Model.PageNumber z @Model.TotalPages.</p>
    </nav>
}

<section class="articles-related" aria-labelledby="relatedCourses">
    <div class="card border-0 shadow-sm overflow-hidden">
        <div class="row g-0 align-items-center">
            <div class="col-lg-7 p-4 p-lg-5">
                <h2 id="relatedCourses" class="h3 fw-bold mb-3">Posuňte znalosti díky navazujícím kurzům</h2>
                <p class="mb-4 text-muted">Každý článek navazuje na praktické kurzy, které vás provedou implementací standardů krok za krokem. Získejte přístup k bonusovým materiálům, Q&amp;A se specialisty i komunitním workshopům.</p>
                <div class="d-flex flex-wrap gap-3">
                    <a class="btn btn-outline-primary" href="/Courses/Index?search=ISO">Prozkoumat všechny kurzy</a>
                    <a class="btn btn-outline-secondary" href="/Contact">Spojit se s konzultantem</a>
                </div>
            </div>
            <div class="col-lg-5 bg-primary-subtle p-4 text-center">
                <i class="bi bi-mortarboard fs-1 text-primary" aria-hidden="true"></i>
                <p class="mt-3 mb-0 fw-semibold text-primary">Certifikovaní lektoři a aktuální sylaby</p>
            </div>
        </div>
    </div>
</section>

@section Head {
    <style>
        .articles-hero {
            padding: 2.5rem 0 1.5rem;
        }

        .articles-hero__content {
            max-width: 860px;
        }

        .articles-toolbar {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
            gap: 1.5rem;
            margin: 2rem 0 1.5rem;
            align-items: start;
        }

        .toolbar-group {
            background: var(--bs-body-bg);
            border: 1px solid var(--bs-border-color);
            border-radius: 0.75rem;
            padding: 1.25rem;
            box-shadow: 0 0.125rem 0.75rem rgba(11, 123, 179, 0.08);
        }

        .toolbar-group--view {
            display: flex;
            gap: 0.75rem;
            justify-content: center;
            align-items: center;
        }

        .toolbar-group--view .btn {
            flex: 1 1 auto;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.25rem;
        }

        .toolbar-group--view .btn.active {
            background-color: var(--bs-primary);
            color: #fff;
        }

        .toolbar-filters {
            display: flex;
            flex-wrap: wrap;
            gap: 0.75rem 1rem;
        }

        .article-list {
            display: grid;
            gap: 1.75rem;
        }

        .article-list--grid {
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        }

        .article-list--list {
            grid-template-columns: 1fr;
        }

        .article-card {
            background: var(--bs-body-bg);
            border-radius: 1rem;
            border: 1px solid var(--bs-border-color);
            box-shadow: 0 0.75rem 2rem rgba(11, 123, 179, 0.08);
            overflow: hidden;
            display: flex;
            flex-direction: column;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .article-card:hover,
        .article-card:focus-within {
            transform: translateY(-4px);
            box-shadow: 0 1.25rem 2.25rem rgba(11, 123, 179, 0.14);
        }

        .article-card__body {
            padding: 1.5rem;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .article-card__meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 0.5rem;
        }

        .article-card__title {
            font-size: 1.45rem;
            line-height: 1.3;
            margin: 0;
        }

        .article-card__perex {
            margin-bottom: 0;
            color: var(--bs-secondary-color);
        }

        .article-card__footer {
            margin-top: auto;
            padding: 1.25rem 1.5rem 1.5rem;
            background: var(--bs-light-bg-subtle, var(--bs-gray-100));
            border-top: 1px solid var(--bs-border-color);
        }

        .articles-empty {
            margin-top: 2rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .articles-related {
            margin-top: 3rem;
        }

        @@media (max-width: 767.98px) {
            .article-card__title {
                font-size: 1.25rem;
            }

            .article-card__body {
                padding: 1.25rem;
            }

            .article-card__footer {
                padding: 1rem 1.25rem 1.25rem;
            }
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const listElement = document.querySelector('[data-articles-list]');
            const searchInput = document.querySelector('[data-articles-search]');
            const filterInputs = Array.from(document.querySelectorAll('[data-year-filter]'));
            const articleCards = Array.from(document.querySelectorAll('[data-article-card]'));
            const noResults = document.querySelector('[data-empty-state]');
            const liveRegion = document.getElementById('articlesLiveRegion');
            const viewButtons = Array.from(document.querySelectorAll('[data-view-toggle]'));

            if (!listElement || articleCards.length === 0) {
                return;
            }

            const updateAnnouncement = (visible) => {
                if (!liveRegion) {
                    return;
                }

                liveRegion.textContent = visible === 1
                    ? 'Zobrazuje se 1 článek.'
                    : `Zobrazuje se ${visible} článků.`;
            };

            const applyFilters = () => {
                const query = searchInput ? searchInput.value.trim().toLowerCase() : '';
                const activeYears = filterInputs
                    .filter(input => input.checked)
                    .map(input => input.value.toLowerCase());

                let visibleCount = 0;
                articleCards.forEach(card => {
                    const year = (card.dataset.year ?? '').toLowerCase();
                    const searchable = card.dataset.searchText ?? '';
                    const matchesYear = activeYears.length === 0 || activeYears.includes(year);
                    const matchesQuery = query.length === 0 || searchable.includes(query);
                    const isVisible = matchesYear && matchesQuery;

                    card.classList.toggle('d-none', !isVisible);
                    card.setAttribute('aria-hidden', (!isVisible).toString());

                    if (isVisible) {
                        visibleCount += 1;
                    }
                });

                const hasResults = visibleCount > 0;
                if (noResults) {
                    noResults.classList.toggle('d-none', hasResults);
                }

                updateAnnouncement(visibleCount);
            };

            const switchView = (view) => {
                if (!listElement) {
                    return;
                }

                listElement.dataset.view = view;
                listElement.classList.toggle('article-list--grid', view === 'grid');
                listElement.classList.toggle('article-list--list', view === 'list');

                viewButtons.forEach(button => {
                    const isActive = button.dataset.viewToggle === view;
                    button.classList.toggle('active', isActive);
                    button.setAttribute('aria-pressed', isActive.toString());
                });
            };

            if (searchInput) {
                searchInput.addEventListener('input', () => applyFilters());
            }
            filterInputs.forEach(input => input.addEventListener('change', () => applyFilters()));
            viewButtons.forEach(button => button.addEventListener('click', () => switchView(button.dataset.viewToggle)));

            applyFilters();
        });
    </script>
}
