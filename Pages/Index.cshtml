@page
@model IndexModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer T
@inject SysJaky_N.Services.IsoStandards.IIsoSpecializationMetadataProvider IsoMetadataProvider
@{
    ViewData["Title"] = T["Title"];

    var specializations = IsoMetadataProvider.GetAll();
}

@section Head {
    <link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />
}

<section class="home-hero">
    <div class="container-xxl">
        <div class="home-hero__grid">
            <div class="home-hero__copy">
                <h1 class="home-hero__title">@T["HeroMainHeading"]</h1>
                <p class="home-hero__subtitle">@T["HeroSubheading"]</p>

                <div class="home-hero__usp-grid">
                    <article class="home-hero__usp glass-card">
                        <div class="home-hero__usp-icon" aria-hidden="true">
                            <i class="bi bi-stars"></i>
                        </div>
                        <p class="home-hero__usp-text">@T["HeroUSP1"]</p>
                    </article>
                    <article class="home-hero__usp glass-card">
                        <div class="home-hero__usp-icon" aria-hidden="true">
                            <i class="bi bi-mortarboard"></i>
                        </div>
                        <p class="home-hero__usp-text">@T["HeroUSP2"]</p>
                    </article>
                    <article class="home-hero__usp glass-card">
                        <div class="home-hero__usp-icon" aria-hidden="true">
                            <i class="bi bi-shield-check"></i>
                        </div>
                        <p class="home-hero__usp-text">@T["HeroUSP3"]</p>
                    </article>
                </div>

                <div class="home-hero__actions">
                    <a class="btn btn-light btn-lg fw-semibold shadow-sm" href="/Courses/Index">@T["HeroPrimaryCTA"]</a>
                    <a class="btn btn-outline-light btn-lg fw-semibold" href="/About">@T["HeroSecondaryCTA"]</a>
                </div>

                <div class="home-hero__chips" aria-label="@T["HeroSubheading"]">
                    <span class="chip">@T["ChipOnline"]</span>
                    <span class="chip">@T["ChipRetraining"]</span>
                    <span class="chip">@T["ChipCertificate"]</span>
                    <span class="chip">@T["ChipAccreditation"]</span>
                    <span class="chip">@T["ChipInternalAudits"]</span>
                </div>
            </div>

            <aside class="home-hero__aside" aria-label="@T["HeroSearchLabel"]">
                <form class="home-search glass-panel" method="get" action="/Courses/Search" role="search">
                    <label class="visually-hidden" for="hero-search-input">@T["HeroSearchLabel"]</label>
                    <div class="home-search__fields">
                        <input type="search"
                               class="form-control form-control-lg"
                               id="hero-search-input"
                               name="query"
                               placeholder="@T["HeroSearchPlaceholder"]"
                               aria-label="@T["HeroSearchAriaLabel"]">
                        <button type="submit" class="btn btn-primary btn-lg fw-semibold">@T["HeroSubmit"]</button>
                    </div>
                </form>

                <div class="home-hero__insight glass-panel">
                    <div class="home-hero__insight-item">
                        <i class="bi bi-award" aria-hidden="true"></i>
                        <p class="mb-0">@Html.Raw(T["TrustRating", "<span class=\"stat-number\" data-target=\"4.8\" data-decimals=\"1\" data-suffix=\"/5\">4.8</span>"])</p>
                    </div>
                    <div class="home-hero__insight-item">
                        <i class="bi bi-people" aria-hidden="true"></i>
                        <p class="mb-0">@Html.Raw(T["TrustGraduates", "<span class=\"stat-number\" data-target=\"10000\" data-suffix=\"+\">10000</span>"])</p>
                    </div>
                    <div class="home-hero__insight-item">
                        <i class="bi bi-shield-check" aria-hidden="true"></i>
                        <p class="mb-0">@T["TrustGuarantee"]</p>
                    </div>
                    <div class="home-hero__insight-item">
                        <i class="bi bi-patch-check" aria-hidden="true"></i>
                        <p class="mb-0">@T["TrustCertificate"]</p>
                    </div>
                </div>
            </aside>
        </div>

        <div class="home-hero__metrics glass-panel">
            <div class="metric-card">
                <span class="metric-card__value">20+</span>
                <span class="metric-card__label">Let zkušeností</span>
            </div>
            <div class="metric-card">
                <span class="metric-card__value">500+</span>
                <span class="metric-card__label">Spokojených klientů</span>
            </div>
            <div class="metric-card">
                <span class="metric-card__value">2000+</span>
                <span class="metric-card__label">Realizovaných školení</span>
            </div>
            <div class="metric-card">
                <span class="metric-card__value">15</span>
                <span class="metric-card__label">Certifikovaných lektorů</span>
            </div>
        </div>
    </div>
</section>

<section class="home-section home-specializations">
    <div class="container-xxl">
        <div class="home-section__header">
            <span class="section-eyebrow">@T["HeroTitle"]</span>
            <h2 class="home-section__title">Naše specializace</h2>
            <p class="home-section__subtitle">Poskytujeme komplexní poradenství a školení pro následující normy.</p>
        </div>
        <div class="specialization-grid">
            @foreach (var specialization in specializations)
            {
                <article class="specialization-card @specialization.IconColorClass">
                    <div class="specialization-card__icon" aria-hidden="true">
                        <i class="@specialization.CardIconClass"></i>
                    </div>
                    <div class="specialization-card__body">
                        <h3 class="specialization-card__title">@specialization.Name</h3>
                        <p class="specialization-card__summary">@specialization.Summary</p>
                    </div>
                </article>
            }
        </div>
    </div>
</section>

<section class="home-section home-courses">
    <div class="container-xxl">
        <div class="home-section__header">
            <span class="section-eyebrow">@T["HowItWorksTitle"]</span>
            <h2 class="home-section__title">Aktuální školení a kurzy</h2>
            <p class="home-section__subtitle">Vyberte si z nejžádanějších kurzů, které vám pomohou splnit požadavky norem a posunout váš tým o krok dál.</p>
        </div>
        <div class="home-courses__grid">
            <div class="home-courses__primary glass-panel">
                <div class="home-courses__primary-header">
                    <h3 class="h5 mb-0">@T["RecommendedForYou"]</h3>
                    <a class="btn btn-outline-primary btn-sm" href="/Courses/Index">@T["RecommendedViewAll"]</a>
                </div>
                <div class="row g-3">
                    @foreach (var c in Model.PicksForPersona)
                    {
                        <div class="col-12 col-md-6">
                            @await Html.PartialAsync("/Pages/Shared/_CourseCard.cshtml", c)
                        </div>
                    }
                    @if (!Model.PicksForPersona.Any())
                    {
                        <div class="col-12 text-muted">@T["RecommendedEmpty"]</div>
                    }
                </div>
            </div>
            <aside class="home-courses__sidebar glass-panel">
                <h3 class="h6 mb-3">@T["StartingSoon"]</h3>
                <ul class="list-unstyled mb-4">
                    @foreach (var c in Model.FastSoonest)
                    {
                        <li class="home-courses__list-item">
                            <a asp-page="/Courses/Details" asp-route-id="@c.Id">@c.Title</a>
                            <span class="text-muted">— @c.Date.ToString("d")</span>
                        </li>
                    }
                </ul>
                <a class="btn btn-outline-primary btn-sm" href="/Courses/Calendar"><i class="bi bi-calendar3"></i> @T["CalendarButton"]</a>
            </aside>
        </div>
        <div class="home-courses__news glass-panel">
            <h3 class="h6 mb-3">@T["NewsHeading"]</h3>
            <div class="home-courses__news-pills">
                @foreach (var a in Model.FreshNews)
                {
                    <a class="news-pill" asp-page="/Articles/Details" asp-route-id="@a.Id">@a.Title</a>
                }
            </div>
        </div>
    </div>
</section>

<section class="home-section home-journey">
    <div class="container-xxl">
        <div class="home-section__header">
            <span class="section-eyebrow">@T["HowItWorksTitle"]</span>
            <h2 class="home-section__title">@T["HowItWorksTitle"]</h2>
            <p class="home-section__subtitle">@T["StepRegisterDescription"]</p>
        </div>
        <div class="home-journey__grid">
            <article class="journey-card glass-card">
                <div class="journey-card__icon" aria-hidden="true"><i class="bi bi-clipboard-data"></i></div>
                <h3 class="journey-card__title">@T["StepSelectTitle"]</h3>
                <p class="journey-card__text">@T["StepSelectDescription"]</p>
            </article>
            <article class="journey-card glass-card">
                <div class="journey-card__icon" aria-hidden="true"><i class="bi bi-calendar-check"></i></div>
                <h3 class="journey-card__title">@T["StepRegisterTitle"]</h3>
                <p class="journey-card__text">@T["StepRegisterDescription"]</p>
            </article>
            <article class="journey-card glass-card">
                <div class="journey-card__icon" aria-hidden="true"><i class="bi bi-patch-check"></i></div>
                <h3 class="journey-card__title">@T["StepPayTitle"]</h3>
                <p class="journey-card__text">@T["StepPayDescription"]</p>
            </article>
        </div>
    </div>
</section>

<section class="home-section home-why">
    <div class="container-xxl">
        <div class="home-why__panel glass-panel">
            <div class="home-why__content">
                <h2 class="home-section__title mb-3">@T["WhyChooseHeading"]</h2>
                <p class="home-section__subtitle">@T["WhyChooseDescription"]</p>
            </div>
            <div class="home-why__highlights">
                <span class="chip chip--accent">@T["HeroUSP1"]</span>
                <span class="chip chip--accent">@T["HeroUSP2"]</span>
                <span class="chip chip--accent">@T["HeroUSP3"]</span>
            </div>
        </div>
    </div>
</section>

@await Html.PartialAsync("/Pages/Shared/_CertificationTimeline.cshtml")

@await Html.PartialAsync("/Pages/Shared/_TestimonialsCarousel.cshtml", Model.FeaturedTestimonials)

<section class="home-section home-contact">
    <div class="container-xxl">
        <div class="home-contact__panel glass-panel">
            <div>
                <h2 class="home-section__title">@T["ContactCtaHeading"]</h2>
                <p class="home-section__subtitle">@T["HeroSubheading"]</p>
            </div>
            <div class="home-contact__actions">
                <a class="btn btn-primary btn-lg" href="/Contact">@T["HeroSecondaryCTA"]</a>
                <a class="btn btn-outline-light btn-lg" href="/Services">@T["HeroPrimaryCTA"]</a>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script src="~/js/testimonials.js" asp-append-version="true"></script>
    <script>
        (() => {
            const locale = document.documentElement.lang || 'cs';

            const animateStats = () => {
                const stats = document.querySelectorAll('.stat-number');
                if (!stats.length) return;

                const duration = 2000;

                const startAnimation = (el) => {
                    const target = Number(el.getAttribute('data-target')) || 0;
                    const decimals = Number(el.getAttribute('data-decimals')) || 0;
                    const prefix = el.getAttribute('data-prefix') || '';
                    const suffix = el.getAttribute('data-suffix') || '';

                    const startTimestamp = performance.now();

                    const renderValue = (value) => {
                        const formatted = value.toLocaleString(locale, {
                            minimumFractionDigits: decimals,
                            maximumFractionDigits: decimals
                        });
                        el.textContent = `${prefix}${formatted}${suffix}`;
                    };

                    renderValue(0);

                    const tick = (now) => {
                        const progress = Math.min((now - startTimestamp) / duration, 1);
                        const current = target * progress;
                        renderValue(current);
                        if (progress < 1) {
                            requestAnimationFrame(tick);
                        }
                    };

                    requestAnimationFrame(tick);
                };

                if (!('IntersectionObserver' in window)) {
                    stats.forEach(startAnimation);
                    return;
                }

                const observer = new IntersectionObserver((entries, obs) => {
                    entries.forEach((entry) => {
                        if (!entry.isIntersecting) return;
                        startAnimation(entry.target);
                        obs.unobserve(entry.target);
                    });
                }, {
                    threshold: 0.4
                });

                stats.forEach((el) => observer.observe(el));
            };

            const init = () => {
                animateStats();
            };

            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', init);
            } else {
                init();
            }
        })();
    </script>
}
