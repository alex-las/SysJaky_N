<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FieldRequired" xml:space="preserve">
    <value>The {0} field is required.</value>
  </data>
  <data name="StringLength" xml:space="preserve">
    <value>The {0} field must be at most {1} characters long.</value>
  </data>
  <data name="EmailAddressInvalid" xml:space="preserve">
    <value>The {0} field must contain a valid email address.</value>
  </data>
  <data name="LanguageMenuLabel" xml:space="preserve">
    <value>Language selection</value>
  </data>
  <data name="ChangeLanguageFormLabel" xml:space="preserve">
    <value>Change language</value>
  </data>
  <data name="LanguageNameCs" xml:space="preserve">
    <value>Czech</value>
  </data>
  <data name="LanguageNameEn" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="NavHome" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="NavAbout" xml:space="preserve">
    <value>About SysJaky</value>
  </data>
  <data name="NavServices" xml:space="preserve">
    <value>Services &amp; consulting</value>
  </data>
  <data name="NavCourses" xml:space="preserve">
    <value>Courses &amp; training</value>
  </data>
  <data name="NavArticles" xml:space="preserve">
    <value>Articles &amp; case studies</value>
  </data>
  <data name="ContactNameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ContactEmailLabel" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ContactMessageLabel" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Range" xml:space="preserve">
    <value>The field {0} must be between {1} and {2}.</value>
  </data>
  <data name="Validation.Required" xml:space="preserve">
    <value>The {0} field is required.</value>
  </data>
  <data name="Validation.StringLength" xml:space="preserve">
    <value>The {0} field must be at most {1} characters long.</value>
  </data>
  <data name="Validation.StringLengthRange" xml:space="preserve">
    <value>The {0} field must be between {2} and {1} characters long.</value>
  </data>
  <data name="Validation.EmailAddress" xml:space="preserve">
    <value>The {0} field must contain a valid email address.</value>
  </data>
  <data name="Validation.Phone" xml:space="preserve">
    <value>The {0} field must contain a valid phone number.</value>
  </data>
  <data name="Validation.Url" xml:space="preserve">
    <value>The {0} field must contain a valid URL.</value>
  </data>
  <data name="Validation.Range" xml:space="preserve">
    <value>The {0} field must be between {1} and {2}.</value>
  </data>
  <data name="Validation.PositiveInteger" xml:space="preserve">
    <value>The {0} field must be greater than zero.</value>
  </data>
  <data name="Validation.NonNegativeNumber" xml:space="preserve">
    <value>The {0} field must be non-negative.</value>
  </data>
  <data name="Validation.NewPricePositive" xml:space="preserve">
    <value>The new price must be greater than zero.</value>
  </data>
  <data name="Validation.PasswordComplexity" xml:space="preserve">
    <value>The password must contain upper and lower case letters and numbers.</value>
  </data>
  <data name="Validation.PasswordMismatch" xml:space="preserve">
    <value>The {0} and {1} fields must match.</value>
  </data>
  <data name="Models.CompanyProfile.ManagerId.DisplayName" xml:space="preserve">
    <value>Manager</value>
  </data>
  <data name="Models.CompanyProfile.Name.DisplayName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Models.CompanyProfile.ReferenceCode.DisplayName" xml:space="preserve">
    <value>Reference code</value>
  </data>
  <data name="Models.CourseBlock.Description.DisplayName" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Models.CourseBlock.Price.DisplayName" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Models.CourseBlock.Title.DisplayName" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Models.CourseTerm.CourseId.DisplayName" xml:space="preserve">
    <value>Course</value>
  </data>
  <data name="Models.CourseTerm.EndUtc.DisplayName" xml:space="preserve">
    <value>End (UTC)</value>
  </data>
  <data name="Models.CourseTerm.InstructorId.DisplayName" xml:space="preserve">
    <value>Instructor</value>
  </data>
  <data name="Models.CourseTerm.IsActive.DisplayName" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Models.CourseTerm.SeatsTaken.DisplayName" xml:space="preserve">
    <value>Seats taken</value>
  </data>
  <data name="Models.CourseTerm.StartUtc.DisplayName" xml:space="preserve">
    <value>Start (UTC)</value>
  </data>
  <data name="Models.Instructor.Bio.DisplayName" xml:space="preserve">
    <value>Bio</value>
  </data>
  <data name="Models.Instructor.Email.DisplayName" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Models.Instructor.FullName.DisplayName" xml:space="preserve">
    <value>Full name</value>
  </data>
  <data name="Models.Instructor.PhoneNumber.DisplayName" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Models.OrderStatus.Cancelled.DisplayName" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="Models.OrderStatus.Paid.DisplayName" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="Models.OrderStatus.Pending.DisplayName" xml:space="preserve">
    <value>Pending payment</value>
  </data>
  <data name="Models.OrderStatus.Refunded.DisplayName" xml:space="preserve">
    <value>Refunded</value>
  </data>
  <data name="Models.PriceSchedule.CourseId.DisplayName" xml:space="preserve">
    <value>Course</value>
  </data>
  <data name="Models.PriceSchedule.FromUtc.DisplayName" xml:space="preserve">
    <value>Valid from</value>
  </data>
  <data name="Models.PriceSchedule.NewPriceExcl.DisplayName" xml:space="preserve">
    <value>New price (excl. VAT)</value>
  </data>
  <data name="Models.PriceSchedule.ToUtc.DisplayName" xml:space="preserve">
    <value>Valid until</value>
  </data>
  <data name="Models.Testimonial.Company.DisplayName" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Models.Testimonial.ConsentGranted.DisplayName" xml:space="preserve">
    <value>Consent granted</value>
  </data>
  <data name="Models.Testimonial.FullName.DisplayName" xml:space="preserve">
    <value>Full name</value>
  </data>
  <data name="Models.Testimonial.IsPublished.DisplayName" xml:space="preserve">
    <value>Publish</value>
  </data>
  <data name="Models.Testimonial.PhotoAltText.DisplayName" xml:space="preserve">
    <value>Photo alternative text</value>
  </data>
  <data name="Models.Testimonial.PhotoUrl.DisplayName" xml:space="preserve">
    <value>Photo URL</value>
  </data>
  <data name="Models.Testimonial.Position.DisplayName" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Models.Testimonial.Quote.DisplayName" xml:space="preserve">
    <value>Quote</value>
  </data>
  <data name="Models.Testimonial.Rating.DisplayName" xml:space="preserve">
    <value>Rating</value>
  </data>
  <data name="Models.Voucher.AppliesToCourse.DisplayName" xml:space="preserve">
    <value>Applies to course</value>
  </data>
  <data name="Models.Voucher.Code.DisplayName" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Models.Voucher.ExpiresUtc.DisplayName" xml:space="preserve">
    <value>Expires (UTC)</value>
  </data>
  <data name="Models.Voucher.MaxRedemptions.DisplayName" xml:space="preserve">
    <value>Max redemptions</value>
  </data>
  <data name="Models.Voucher.Type.DisplayName" xml:space="preserve">
    <value>Voucher type</value>
  </data>
  <data name="Models.Voucher.UsedCount.DisplayName" xml:space="preserve">
    <value>Redemptions used</value>
  </data>
  <data name="Models.Voucher.Value.DisplayName" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Models.VoucherType.FixedAmount.DisplayName" xml:space="preserve">
    <value>Fixed amount</value>
  </data>
  <data name="Models.VoucherType.Percentage.DisplayName" xml:space="preserve">
    <value>Percentage discount</value>
  </data>
  <data name="ConsultingIntro" xml:space="preserve">
    <value>Consulting engagements: We lead them from the initial process analysis through tailored improvements to a management system fully aligned with ISO and accreditation requirements.</value>
  </data>
  <data name="TrainingIntro" xml:space="preserve">
    <value>Training and workshops: We coach quality managers, internal auditors, and specialists to apply the standards in daily operations and foster a culture of continual improvement.</value>
  </data>
  <data name="AuditSupport" xml:space="preserve">
    <value>Audit support: We prepare you for internal and certification audits, deliver gap analyses, and assist with corrective actions as well as communication with the certification body.</value>
  </data>
  <data name="DocumentTemplates" xml:space="preserve">
    <value>Documentation templates: We supply clear templates for policies, process maps, checklists, and records to accelerate documentation and simplify ongoing system maintenance.</value>
  </data>
  <data name="Pages.Account.Register.Input.ConfirmPassword.DisplayName" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Pages.Account.Register.Input.ReferralCode.DisplayName" xml:space="preserve">
    <value>Referral code</value>
  </data>
  <data name="Pages.Admin.CourseTerms.Input.CourseId.DisplayName" xml:space="preserve">
    <value>Course</value>
  </data>
  <data name="Pages.Admin.CourseTerms.Input.EndUtc.DisplayName" xml:space="preserve">
    <value>End time</value>
  </data>
  <data name="Pages.Admin.CourseTerms.Input.InstructorId.DisplayName" xml:space="preserve">
    <value>Instructor</value>
  </data>
  <data name="Pages.Admin.CourseTerms.Input.IsActive.DisplayName" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Pages.Admin.CourseTerms.Input.StartUtc.DisplayName" xml:space="preserve">
    <value>Start time</value>
  </data>
  <data name="Pages.Admin.Users.Edit.Input.Email.DisplayName" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Pages.Admin.Users.Edit.Input.IsLocked.DisplayName" xml:space="preserve">
    <value>Account locked</value>
  </data>
  <data name="Pages.Admin.Users.Edit.Input.PhoneNumber.DisplayName" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="Pages.Api.Newsletter.Input.Consent.DisplayName" xml:space="preserve">
    <value>Consent</value>
  </data>
  <data name="Pages.Api.Newsletter.Input.Email.DisplayName" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Pages.Api.Newsletter.Input.Categories.DisplayName" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Validation.Categories.Invalid" xml:space="preserve">
    <value>One or more selected categories is not valid.</value>
  </data>
  <data name="Validation.Categories.Required" xml:space="preserve">
    <value>Select at least one category.</value>
  </data>
  <data name="NewsletterCategoriesLabel" xml:space="preserve">
    <value>Choose the topics you're interested in</value>
  </data>
  <data name="NewsletterCategoriesHint" xml:space="preserve">
    <value>All categories are selected by default. Clear any topics you are not interested in.</value>
  </data>
  <data name="NewsletterCategoriesSelectAll" xml:space="preserve">
    <value>Select all categories</value>
  </data>
  <data name="NewsletterCategoriesEmpty" xml:space="preserve">
    <value>There are no categories available right now.</value>
  </data>
  <data name="NewsletterCategoriesError" xml:space="preserve">
    <value>We couldn't load the categories. Please try again later.</value>
  </data>
  <data name="NewsletterCategoriesLoading" xml:space="preserve">
    <value>Loading categories…</value>
  </data>
</root>